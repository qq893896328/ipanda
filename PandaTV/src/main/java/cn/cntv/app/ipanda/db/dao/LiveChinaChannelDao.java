package cn.cntv.app.ipanda.db.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import cn.cntv.app.ipanda.db.entity.LiveChinaChannelEntity;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "livechina_chinnel".
*/
public class LiveChinaChannelDao extends AbstractDao<LiveChinaChannelEntity, String> {

    public static final String TABLENAME = "livechina_chinnel";

    /**
     * Properties of entity LiveChinaChannelEntity.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Title = new Property(0, String.class, "title", true, "TITLE");
        public final static Property Url = new Property(1, String.class, "url", false, "URL");
        public final static Property Type = new Property(2, String.class, "type", false, "TYPE");
        public final static Property Order = new Property(3, String.class, "order", false, "ORDER");
    };


    public LiveChinaChannelDao(DaoConfig config) {
        super(config);
    }
    
    public LiveChinaChannelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"livechina_chinnel\" (" + //
                "\"TITLE\" TEXT PRIMARY KEY NOT NULL ," + // 0: title
                "\"URL\" TEXT," + // 1: url
                "\"TYPE\" TEXT," + // 2: type
                "\"ORDER\" TEXT);"); // 3: order
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"livechina_chinnel\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, LiveChinaChannelEntity entity) {
        stmt.clearBindings();
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(1, title);
        }
 
        String url = entity.getUrl();
        if (url != null) {
            stmt.bindString(2, url);
        }
 
        String type = entity.getType();
        if (type != null) {
            stmt.bindString(3, type);
        }
 
        String order = entity.getOrder();
        if (order != null) {
            stmt.bindString(4, order);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public LiveChinaChannelEntity readEntity(Cursor cursor, int offset) {
        LiveChinaChannelEntity entity = new LiveChinaChannelEntity( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // title
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // url
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // type
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3) // order
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, LiveChinaChannelEntity entity, int offset) {
        entity.setTitle(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setUrl(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setType(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setOrder(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(LiveChinaChannelEntity entity, long rowId) {
        return entity.getTitle();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(LiveChinaChannelEntity entity) {
        if(entity != null) {
            return entity.getTitle();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
